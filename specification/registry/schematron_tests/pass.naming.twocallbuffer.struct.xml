<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE xml>
<registry>
    <comment>
Copyright (c) 2017-2023, The Khronos Group Inc.

SPDX-License-Identifier: Apache-2.0 OR MIT
    </comment>

    <enums name="XrResult" type="enum" comment="Error and return codes">
        <!-- Return codes for successful operation execution (positive values) -->
        <enum value="0"     name="XR_SUCCESS"                                   comment="Function successfully completed."/>
        <enum value="1"     name="XR_TIMEOUT_EXPIRED"                           comment="The specified timeout time occurred before the operation could complete."/>
        <enum value="3"     name="XR_SESSION_LOSS_PENDING"                      comment="The session will be lost soon."/>
        <enum value="4"     name="XR_EVENT_UNAVAILABLE"                         comment="No event was available."/>
        <enum value="7"     name="XR_SPACE_BOUNDS_UNAVAILABLE"                  comment="The space's bounds are not known at the moment."/>
        <enum value="8"     name="XR_SESSION_NOT_FOCUSED"                       comment="The session is not in the focused state."/>
        <enum value="9"     name="XR_FRAME_DISCARDED"                           comment="A frame has been discarded from composition."/>
        <!-- Error codes (negative values) -->
        <enum value="-1"    name="XR_ERROR_VALIDATION_FAILURE"                  comment="The function usage was invalid in some way."/>
        <enum value="-2"    name="XR_ERROR_RUNTIME_FAILURE"                     comment="The runtime failed to handle the function in an unexpected way that is not covered by another error result. "/>
        <enum value="-3"    name="XR_ERROR_OUT_OF_MEMORY"                       comment="A memory allocation has failed."/>
        <enum value="-4"    name="XR_ERROR_API_VERSION_UNSUPPORTED"             comment="The runtime does not support the requested API version."/>
    </enums>

    <types>

        <type category="define">
#if !defined(XR_DEFINE_HANDLE)
#if (XR_PTR_SIZE == 8)
    #define <name>XR_DEFINE_HANDLE</name>(object) typedef struct object##_T* object;
#else
    #define XR_DEFINE_HANDLE(object) typedef uint64_t object;
#endif
#endif
        </type>

        <type category="handle"><type>XR_DEFINE_HANDLE</type>(<name>XrInstance</name>)</type>

        <type name="openxr_platform_defines" category="include">#include "openxr_platform_defines.h"</type>

        <type name="XrStructureType" category="enum"/>

        <type requires="openxr_platform_defines" name="void"/>
        <type requires="openxr_platform_defines" name="char"/>
        <type requires="openxr_platform_defines" name="uint32_t"/>

        <type category="struct" name="XrStructBuffer" returnedonly="true">
            <member values="XR_TYPE_STRUCT_BUFFER"><type>XrStructureType</type> <name>type</name></member>
            <member><type>void</type>* <name>next</name></member>
            <member optional="true"><type>uint32_t</type> <name>bufferCapacityInput</name></member>
            <member optional="true"><type>uint32_t</type> <name>bufferCountOutput</name></member>
            <member optional="true" len="bufferCapacityInput"><type>char</type>* <name>buffer</name></member>
        </type>

        <type category="struct" name="XrStructNum" returnedonly="true">
            <member values="XR_TYPE_STRUCT_NUM"><type>XrStructureType</type> <name>type</name></member>
            <member><type>void</type>* <name>next</name></member>
            <member optional="true"><type>uint32_t</type> <name>numberCapacityInput</name></member>
            <member optional="true"><type>uint32_t</type> <name>numberCountOutput</name></member>
            <member optional="true" len="numberCapacityInput"><type>uint32_t</type>* <name>numbers</name></member>
        </type>
    </types>

    <enums name="XrStructureType" type="enum" comment="Structure type enumerant">
        <enum value="0"    name="XR_TYPE_UNKNOWN"/>
        <enum value="1"    name="XR_TYPE_STRUCT_BUFFER"/>
        <enum value="2"    name="XR_TYPE_STRUCT_NUM"/>
    </enums>
</registry>
